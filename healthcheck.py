import subprocess
import asyncio
import time

def check_port():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç"""
    try:
        result = subprocess.run(['lsof', '-i', ':4433'], 
                              capture_output=True, text=True)
        return result.returncode == 0
    except:
        return False

async def test_http3_request():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTTP/3 –∑–∞–ø—Ä–æ—Å"""
    try:
        from test_client import Http3Client
        client = Http3Client()
        return await client.test_connection()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

async def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ HTTP/3 —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
    if check_port():
        print("‚úÖ –ü–æ—Ä—Ç 4433 –∑–∞–Ω—è—Ç (—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)")
    else:
        print("‚ùå –ü–æ—Ä—Ç 4433 —Å–≤–æ–±–æ–¥–µ–Ω (—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω)")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP/3 –∑–∞–ø—Ä–æ—Å–∞
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP/3 –∑–∞–ø—Ä–æ—Å–∞...")
    start_time = time.time()
    success = await test_http3_request()
    elapsed = time.time() - start_time
    
    if success:
        print(f"‚úÖ HTTP/3 –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {elapsed:.2f} —Å–µ–∫—É–Ω–¥")
    else:
        print("‚ùå HTTP/3 –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è")

if __name__ == "__main__":
    asyncio.run(main())